[2019-01-20 12:37:07,527] INFO org.github.dragos.vscode.Main$ - Starting server in /Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3
[2019-01-20 12:37:07,527] INFO org.github.dragos.vscode.Main$ - Starting server in /Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3
[2019-01-20 12:37:07,535] INFO org.github.dragos.vscode.Main$ - Classpath: /Users/max/.vscode/extensions/dragos.scala-lsp-0.2.3/coursier
[2019-01-20 12:37:07,535] INFO org.github.dragos.vscode.Main$ - Classpath: /Users/max/.vscode/extensions/dragos.scala-lsp-0.2.3/coursier
[2019-01-20 12:37:07,656] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 1246
[2019-01-20 12:37:07,656] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 1246
[2019-01-20 12:37:07,667] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":1803,"rootPath":"/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3","rootUri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3","capabilities":{"workspace":{"applyEdit":true,"didChangeConfiguration":{"dynamicRegistration":false},"didChangeWatchedFiles":{"dynamicRegistration":false},"symbol":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true}},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true}},"hover":{"dynamicRegistration":true},"signatureHelp":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"definition":{"dynamicRegistration":true},"codeAction":{"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true}}},"trace":"off"}}
[2019-01-20 12:37:07,667] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":1803,"rootPath":"/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3","rootUri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3","capabilities":{"workspace":{"applyEdit":true,"didChangeConfiguration":{"dynamicRegistration":false},"didChangeWatchedFiles":{"dynamicRegistration":false},"symbol":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true}},"textDocument":{"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"completionItem":{"snippetSupport":true}},"hover":{"dynamicRegistration":true},"signatureHelp":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"definition":{"dynamicRegistration":true},"codeAction":{"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true}}},"trace":"off"}}
[2019-01-20 12:37:08,075] INFO org.github.dragos.vscode.EnsimeLanguageServer - Initialized with 1803, /Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3, ClientCapabilities()
[2019-01-20 12:37:08,075] INFO org.github.dragos.vscode.EnsimeLanguageServer - Initialized with 1803, /Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3, ClientCapabilities()
[2019-01-20 12:37:08,077] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - ensime.config = "/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/.ensime" 
[2019-01-20 12:37:08,077] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - ensime.config = "/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/.ensime" 
[2019-01-20 12:37:08,540] INFO akka.event.slf4j.Slf4jLogger - Slf4jLogger started
[2019-01-20 12:37:09,223] INFO org.github.dragos.vscode.EnsimeLanguageServer - Using configuration: EnsimeConfig(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3),RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/.ensime_cache),RawFile(/Library/Java/JavaVirtualMachines/jdk-10.0.1.jdk/Contents/Home),praktikum3,2.12.7,List(-Ymacro-expand:discard),List(),List(EnsimeProject(EnsimeProjectId(praktikum3,compile),List(),Set(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/java), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/target/scala-2.12/src_managed/main), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala-2.12), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala)),Set(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/target/scala-2.12/classes)),List(-Ymacro-expand:discard),List(),List(RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-core_2.12/jars/cats-core_2.12-1.4.0.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-kernel_2.12/jars/cats-kernel_2.12-1.4.0.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-macros_2.12/jars/cats-macros_2.12-1.4.0.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/machinist_2.12/jars/machinist_2.12-0.6.5.jar), RawFile(/Users/max/.sbt/boot/scala-2.12.7/lib/scala-library.jar), RawFile(/Users/max/.sbt/boot/scala-2.12.7/lib/scala-reflect.jar)),List(RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-core_2.12/srcs/cats-core_2.12-1.4.0-sources.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-kernel_2.12/srcs/cats-kernel_2.12-1.4.0-sources.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-macros_2.12/srcs/cats-macros_2.12-1.4.0-sources.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/machinist_2.12/srcs/machinist_2.12-0.6.5-sources.jar), RawFile(/Users/max/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.12.7-sources.jar), RawFile(/Users/max/.ivy2/cache/org.scala-lang/scala-reflect/srcs/scala-reflect-2.12.7-sources.jar)),List(RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-core_2.12/docs/cats-core_2.12-1.4.0-javadoc.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-kernel_2.12/docs/cats-kernel_2.12-1.4.0-javadoc.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-macros_2.12/docs/cats-macros_2.12-1.4.0-javadoc.jar), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/target/scala-2.12/hello-world_2.12-1.0-javadoc.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/machinist_2.12/docs/machinist_2.12-0.6.5-javadoc.jar), RawFile(/Users/max/.ivy2/cache/org.scala-lang/scala-library/docs/scala-library-2.12.7-javadoc.jar), RawFile(/Users/max/.ivy2/cache/org.scala-lang/scala-reflect/docs/scala-reflect-2.12.7-javadoc.jar))), EnsimeProject(EnsimeProjectId(praktikum3,test),List(EnsimeProjectId(praktikum3,compile)),Set(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/test/java), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/test/scala-2.12), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/test/scala), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/target/scala-2.12/src_managed/test)),Set(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/target/scala-2.12/test-classes)),List(-Ymacro-expand:discard),List(),List(),List(),List())))
[2019-01-20 12:37:09,223] INFO org.github.dragos.vscode.EnsimeLanguageServer - Using configuration: EnsimeConfig(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3),RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/.ensime_cache),RawFile(/Library/Java/JavaVirtualMachines/jdk-10.0.1.jdk/Contents/Home),praktikum3,2.12.7,List(-Ymacro-expand:discard),List(),List(EnsimeProject(EnsimeProjectId(praktikum3,compile),List(),Set(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/java), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/target/scala-2.12/src_managed/main), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala-2.12), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala)),Set(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/target/scala-2.12/classes)),List(-Ymacro-expand:discard),List(),List(RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-core_2.12/jars/cats-core_2.12-1.4.0.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-kernel_2.12/jars/cats-kernel_2.12-1.4.0.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-macros_2.12/jars/cats-macros_2.12-1.4.0.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/machinist_2.12/jars/machinist_2.12-0.6.5.jar), RawFile(/Users/max/.sbt/boot/scala-2.12.7/lib/scala-library.jar), RawFile(/Users/max/.sbt/boot/scala-2.12.7/lib/scala-reflect.jar)),List(RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-core_2.12/srcs/cats-core_2.12-1.4.0-sources.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-kernel_2.12/srcs/cats-kernel_2.12-1.4.0-sources.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-macros_2.12/srcs/cats-macros_2.12-1.4.0-sources.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/machinist_2.12/srcs/machinist_2.12-0.6.5-sources.jar), RawFile(/Users/max/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.12.7-sources.jar), RawFile(/Users/max/.ivy2/cache/org.scala-lang/scala-reflect/srcs/scala-reflect-2.12.7-sources.jar)),List(RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-core_2.12/docs/cats-core_2.12-1.4.0-javadoc.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-kernel_2.12/docs/cats-kernel_2.12-1.4.0-javadoc.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/cats-macros_2.12/docs/cats-macros_2.12-1.4.0-javadoc.jar), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/target/scala-2.12/hello-world_2.12-1.0-javadoc.jar), RawFile(/Users/max/.ivy2/cache/org.typelevel/machinist_2.12/docs/machinist_2.12-0.6.5-javadoc.jar), RawFile(/Users/max/.ivy2/cache/org.scala-lang/scala-library/docs/scala-library-2.12.7-javadoc.jar), RawFile(/Users/max/.ivy2/cache/org.scala-lang/scala-reflect/docs/scala-reflect-2.12.7-javadoc.jar))), EnsimeProject(EnsimeProjectId(praktikum3,test),List(EnsimeProjectId(praktikum3,compile)),Set(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/test/java), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/test/scala-2.12), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/test/scala), RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/target/scala-2.12/src_managed/test)),Set(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/target/scala-2.12/test-classes)),List(-Ymacro-expand:discard),List(),List(),List(),List())))
[2019-01-20 12:37:09,243] INFO org.github.dragos.vscode.ensime.EnsimeActor - Starting problematic actor now
[2019-01-20 12:37:09,243] INFO org.github.dragos.vscode.ensime.EnsimeActor - Starting problematic actor now
[2019-01-20 12:37:09,245] INFO org.github.dragos.vscode.ensime.EnsimeActor - Created: Actor[akka://ENSIME/user/server/ensimeProject#-1417582228]
[2019-01-20 12:37:09,245] INFO org.github.dragos.vscode.ensime.EnsimeActor - Created: Actor[akka://ENSIME/user/server/ensimeProject#-1417582228]
[2019-01-20 12:37:09,260] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding ConnectionInfoReq
[2019-01-20 12:37:09,260] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding ConnectionInfoReq
[2019-01-20 12:37:09,273] INFO org.apache.commons.vfs2.impl.StandardFileSystemManager - Using "/var/folders/d9/m5s62jk57n953s98fxt_6mgr0000gn/T/vfs_cache" as temporary files store.
[2019-01-20 12:37:09,349] DEBUG langserver.core.MessageWriter - Content-Length: 441



{"jsonrpc":"2.0","result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"completionProvider":{"resolveProvider":false,"triggerCharacters":["."]},"definitionProvider":true,"referencesProvider":false,"documentHighlightProvider":false,"documentSymbolProvider":true,"workspaceSymbolProvider":false,"codeActionProvider":false,"documentFormattingProvider":false,"documentRangeFormattingProvider":false,"renameProvider":false}},"id":0}
[2019-01-20 12:37:09,349] DEBUG langserver.core.MessageWriter - Content-Length: 441



{"jsonrpc":"2.0","result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"completionProvider":{"resolveProvider":false,"triggerCharacters":["."]},"definitionProvider":true,"referencesProvider":false,"documentHighlightProvider":false,"documentSymbolProvider":true,"workspaceSymbolProvider":false,"codeActionProvider":false,"documentFormattingProvider":false,"documentRangeFormattingProvider":false,"renameProvider":false}},"id":0}
[2019-01-20 12:37:09,350] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"completionProvider":{"resolveProvider":false,"triggerCharacters":["."]},"definitionProvider":true,"referencesProvider":false,"documentHighlightProvider":false,"documentSymbolProvider":true,"workspaceSymbolProvider":false,"codeActionProvider":false,"documentFormattingProvider":false,"documentRangeFormattingProvider":false,"renameProvider":false}},"id":0}
[2019-01-20 12:37:09,350] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"completionProvider":{"resolveProvider":false,"triggerCharacters":["."]},"definitionProvider":true,"referencesProvider":false,"documentHighlightProvider":false,"documentSymbolProvider":true,"workspaceSymbolProvider":false,"codeActionProvider":false,"documentFormattingProvider":false,"documentRangeFormattingProvider":false,"renameProvider":false}},"id":0}
[2019-01-20 12:37:09,351] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 52
[2019-01-20 12:37:09,351] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 52
[2019-01-20 12:37:09,352] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"initialized","params":{}}
[2019-01-20 12:37:09,352] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"initialized","params":{}}
[2019-01-20 12:37:09,402] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification Initialized()
[2019-01-20 12:37:09,402] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification Initialized()
[2019-01-20 12:37:09,402] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 6260
[2019-01-20 12:37:09,402] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 6260
[2019-01-20 12:37:09,406] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","languageId":"scala","version":1,"text":"import scala.io.Source\n\ncase class Album(title: String, date: String, artist: String, tracks: List[Track])\ncase class Track(title: String, length: String, rating: Int, features: List[String], writers: List[String]) \n\nobject main {\n    def main(args: Array[String]) {\n        val list: List[Char] = Source.fromFile(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\").mkString.toCharArray.toList\n        val tokenList: List[String] = createTokenList(list, List[String](), \"\")\n        val tokenListe: List[String] =  filter[String](\n                                            polyMap[List[Char],String](\n                                                partition[Char](\n                                                    filter[Char](list\n                                                    ,a => a != '\\n' & a != '\\r' & a != '\\t')\n                                                ,z => z == '<' | z == '>')\n                                            , y => y.mkString)\n                                        , x => x.isEmpty == false)\n        val albumList: List[Album] = parseFile(tokenList, List[Album]())\n        val thriller = albumList(0)\n        /* println(thriller) */\n        /* println(map[Album](albumList, Album => Album.copy(title = Album.title.toUpperCase()))) */\n        /* println(map[Album](albumList, Album => {Album.copy(title = Album.title.toUpperCase()); Album.copy(tracks = map[Track](Album.tracks,Album => Album.copy(Album.title.toUpperCase())))})) */\n        /* println(polyMap[Track,String](thriller.tracks, Track => Track.length)) */\n        /* println(filter[Track,Track](thriller.tracks, Track => Track.rating > 4)) */\n        /* println(polyMap[Track,String](filter[Track,Track](thriller.tracks, Track => Track.writers(0) == \"Rod Temperton\"), Track => Track.title)) */\n        /* println(partition[Track](thriller.tracks, Track => Track.title == \"Thriller\")) */\n        /* println(tokenListe) */\n        /* println(vierA(_*_,x=>x,2,3)) */\n        /* println(range(2,3).map(x=>x).reduceLeft(_+_)) */\n\n    }\n    \n    def map[A](input_list: List[A], func: A=>A) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs => func(x) :: map(xs,func)\n    }\n\n    def polyMap[A,B](input_list: List[A], func: A=>B) : List[B] = input_list match {\n        case Nil => List[B]()\n        case x::xs => func(x) :: polyMap(xs,func)\n    }\n\n    def filter[A](input_list: List[A], condition: A=>Boolean) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs =>  condition(x) match {\n            case true => x :: filter(xs,condition)\n            case false => filter(xs,condition)\n        } \n    }\n\n    def partition[A](input_list: List[A], condition: A=>Boolean) : List[List[A]] = input_list match {\n        case Nil => List[A]() :: List[List[A]]()\n        case x::xs =>  condition(x) match {\n            case true => List[A]() :: partition[A](xs,condition) \n            case false => val y = partition(xs,condition); (List[A](x) ::: y.head)::y.tail\n        }\n    } \n    \n    def vierA(conc: (Int,Int) => Int, f: Int => Int, start: Int, end: Int) : Int = \n        if (start == end) end  else conc(f(start),vierA(conc,f,start+1,end)) \n\n    def range(x:Int,y:Int) : List[Int] = if (x>y) Nil else x::range(x+1,y)\n\n    def createTokenList(list:List[Char], tokenList:List[String], token:String) : List[String] = list match {\n        case Nil => return tokenList\n        case '<'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ => return createTokenList(xs,tokenList :+ token,\"\")\n        }  \n        case '>'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ =>  return createTokenList(xs,tokenList :+ token,\"\")\n        }\n        case '\\n'::xs => return createTokenList(xs,tokenList,token)\n        case '\\t'::xs => return createTokenList(xs,tokenList,token)\n        case '\\r'::xs => return createTokenList(xs,tokenList,token)\n        case x::xs => return createTokenList(xs,tokenList,token+x)\n    } \n\n    def parseFile(tokenList:List[String]) : List[Album] =\n    {\n        return parseFile(tokenList, List[Album]())\n    }\n\n    def parseFile(tokenList:List[String], albumList:List[Album]) : List[Album] = tokenList match {\n        case Nil => return albumList\n        case \"album\"::xs => val(tokenListRest, album) = createAlbum(xs, Album(\"\",\"\",\"\",List[Track]())); \n                            return parseFile(tokenListRest, albumList :+ album)\n    } \n\n    def createAlbum(tokenList:List[String], album:Album) : (List[String], Album) = tokenList match {\n        case \"/album\"::xs => return (xs, album)\n        case \"track\"::xs => val (tokenListRest, track) = createTrack(xs, Track(\"\",\"\",0,List[String](),List[String]())); \n                            return createAlbum(tokenListRest, album.copy(tracks = album.tracks :+ track))\n        case \"artist\"::artist::_::xs => return createAlbum(xs, album.copy(artist = artist))\n        case \"title\"::title::_::xs => return createAlbum(xs, album.copy(title = title))\n        case \"date\"::date::_::xs => return createAlbum(xs, album.copy(date = date))\n    }\n\n    def createTrack(tokenList:List[String], track:Track)  : (List[String], Track) = tokenList match {\n        case \"/track\"::xs => return (xs, track)\n        case \"title\"::title::xs => return createTrack(xs.tail, track.copy(title = title))\n        case \"length\"::length::xs => return createTrack(xs.tail, track.copy(length = length))\n        case \"rating\"::rating::xs => return createTrack(xs.tail, track.copy(rating = rating.toInt))\n        case \"feature\"::feature::xs => return createTrack(xs.tail, track.copy(features = track.features :+ feature))\n        case \"writing\"::writer::xs => return createTrack(xs.tail, track.copy(writers = track.writers :+ writer))\n    }\n}\n\n"}}}
[2019-01-20 12:37:09,406] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","languageId":"scala","version":1,"text":"import scala.io.Source\n\ncase class Album(title: String, date: String, artist: String, tracks: List[Track])\ncase class Track(title: String, length: String, rating: Int, features: List[String], writers: List[String]) \n\nobject main {\n    def main(args: Array[String]) {\n        val list: List[Char] = Source.fromFile(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\").mkString.toCharArray.toList\n        val tokenList: List[String] = createTokenList(list, List[String](), \"\")\n        val tokenListe: List[String] =  filter[String](\n                                            polyMap[List[Char],String](\n                                                partition[Char](\n                                                    filter[Char](list\n                                                    ,a => a != '\\n' & a != '\\r' & a != '\\t')\n                                                ,z => z == '<' | z == '>')\n                                            , y => y.mkString)\n                                        , x => x.isEmpty == false)\n        val albumList: List[Album] = parseFile(tokenList, List[Album]())\n        val thriller = albumList(0)\n        /* println(thriller) */\n        /* println(map[Album](albumList, Album => Album.copy(title = Album.title.toUpperCase()))) */\n        /* println(map[Album](albumList, Album => {Album.copy(title = Album.title.toUpperCase()); Album.copy(tracks = map[Track](Album.tracks,Album => Album.copy(Album.title.toUpperCase())))})) */\n        /* println(polyMap[Track,String](thriller.tracks, Track => Track.length)) */\n        /* println(filter[Track,Track](thriller.tracks, Track => Track.rating > 4)) */\n        /* println(polyMap[Track,String](filter[Track,Track](thriller.tracks, Track => Track.writers(0) == \"Rod Temperton\"), Track => Track.title)) */\n        /* println(partition[Track](thriller.tracks, Track => Track.title == \"Thriller\")) */\n        /* println(tokenListe) */\n        /* println(vierA(_*_,x=>x,2,3)) */\n        /* println(range(2,3).map(x=>x).reduceLeft(_+_)) */\n\n    }\n    \n    def map[A](input_list: List[A], func: A=>A) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs => func(x) :: map(xs,func)\n    }\n\n    def polyMap[A,B](input_list: List[A], func: A=>B) : List[B] = input_list match {\n        case Nil => List[B]()\n        case x::xs => func(x) :: polyMap(xs,func)\n    }\n\n    def filter[A](input_list: List[A], condition: A=>Boolean) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs =>  condition(x) match {\n            case true => x :: filter(xs,condition)\n            case false => filter(xs,condition)\n        } \n    }\n\n    def partition[A](input_list: List[A], condition: A=>Boolean) : List[List[A]] = input_list match {\n        case Nil => List[A]() :: List[List[A]]()\n        case x::xs =>  condition(x) match {\n            case true => List[A]() :: partition[A](xs,condition) \n            case false => val y = partition(xs,condition); (List[A](x) ::: y.head)::y.tail\n        }\n    } \n    \n    def vierA(conc: (Int,Int) => Int, f: Int => Int, start: Int, end: Int) : Int = \n        if (start == end) end  else conc(f(start),vierA(conc,f,start+1,end)) \n\n    def range(x:Int,y:Int) : List[Int] = if (x>y) Nil else x::range(x+1,y)\n\n    def createTokenList(list:List[Char], tokenList:List[String], token:String) : List[String] = list match {\n        case Nil => return tokenList\n        case '<'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ => return createTokenList(xs,tokenList :+ token,\"\")\n        }  \n        case '>'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ =>  return createTokenList(xs,tokenList :+ token,\"\")\n        }\n        case '\\n'::xs => return createTokenList(xs,tokenList,token)\n        case '\\t'::xs => return createTokenList(xs,tokenList,token)\n        case '\\r'::xs => return createTokenList(xs,tokenList,token)\n        case x::xs => return createTokenList(xs,tokenList,token+x)\n    } \n\n    def parseFile(tokenList:List[String]) : List[Album] =\n    {\n        return parseFile(tokenList, List[Album]())\n    }\n\n    def parseFile(tokenList:List[String], albumList:List[Album]) : List[Album] = tokenList match {\n        case Nil => return albumList\n        case \"album\"::xs => val(tokenListRest, album) = createAlbum(xs, Album(\"\",\"\",\"\",List[Track]())); \n                            return parseFile(tokenListRest, albumList :+ album)\n    } \n\n    def createAlbum(tokenList:List[String], album:Album) : (List[String], Album) = tokenList match {\n        case \"/album\"::xs => return (xs, album)\n        case \"track\"::xs => val (tokenListRest, track) = createTrack(xs, Track(\"\",\"\",0,List[String](),List[String]())); \n                            return createAlbum(tokenListRest, album.copy(tracks = album.tracks :+ track))\n        case \"artist\"::artist::_::xs => return createAlbum(xs, album.copy(artist = artist))\n        case \"title\"::title::_::xs => return createAlbum(xs, album.copy(title = title))\n        case \"date\"::date::_::xs => return createAlbum(xs, album.copy(date = date))\n    }\n\n    def createTrack(tokenList:List[String], track:Track)  : (List[String], Track) = tokenList match {\n        case \"/track\"::xs => return (xs, track)\n        case \"title\"::title::xs => return createTrack(xs.tail, track.copy(title = title))\n        case \"length\"::length::xs => return createTrack(xs.tail, track.copy(length = length))\n        case \"rating\"::rating::xs => return createTrack(xs.tail, track.copy(rating = rating.toInt))\n        case \"feature\"::feature::xs => return createTrack(xs.tail, track.copy(features = track.features :+ feature))\n        case \"writing\"::writer::xs => return createTrack(xs.tail, track.copy(writers = track.writers :+ writer))\n    }\n}\n\n"}}}
[2019-01-20 12:37:09,416] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypecheckFileReq(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None))
[2019-01-20 12:37:09,416] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypecheckFileReq(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None))
[2019-01-20 12:37:10,092] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:10,092] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:10,093] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":1,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":5,"character":10}}}
[2019-01-20 12:37:10,093] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":1,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":5,"character":10}}}
[2019-01-20 12:37:10,096] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (5, 10).
[2019-01-20 12:37:10,096] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (5, 10).
[2019-01-20 12:37:10,104] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(227,227))
[2019-01-20 12:37:10,104] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(227,227))
[2019-01-20 12:37:10,106] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(227,227))
[2019-01-20 12:37:10,106] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(227,227))
[2019-01-20 12:37:10,156] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:10,156] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:10,156] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}
[2019-01-20 12:37:10,156] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}
[2019-01-20 12:37:10,159] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(1)
[2019-01-20 12:37:10,159] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(1)
[2019-01-20 12:37:10,309] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 219
[2019-01-20 12:37:10,309] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 219
[2019-01-20 12:37:10,310] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":5,"character":9}}}
[2019-01-20 12:37:10,310] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":5,"character":9}}}
[2019-01-20 12:37:10,312] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (5, 9).
[2019-01-20 12:37:10,312] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (5, 9).
[2019-01-20 12:37:10,313] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(226,226))
[2019-01-20 12:37:10,313] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(226,226))
[2019-01-20 12:37:10,313] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(226,226))
[2019-01-20 12:37:10,313] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(226,226))
[2019-01-20 12:37:10,460] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:10,460] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:10,460] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}
[2019-01-20 12:37:10,460] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}
[2019-01-20 12:37:10,462] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(2)
[2019-01-20 12:37:10,462] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(2)
[2019-01-20 12:37:10,699] INFO akka.actor.DeadLetterActorRef - Message [org.ensime.api.ConnectionInfo] from Actor[akka://ENSIME/user/server/ensimeProject/project#-657911040] to Actor[akka://ENSIME/deadLetters] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
[2019-01-20 12:37:10,708] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Full typecheck complete event
[2019-01-20 12:37:10,708] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Full typecheck complete event
[2019-01-20 12:37:10,709] INFO org.github.dragos.vscode.EnsimeLanguageServer - Received 0 notes.
[2019-01-20 12:37:10,709] INFO org.github.dragos.vscode.EnsimeLanguageServer - Received 0 notes.
[2019-01-20 12:37:10,715] DEBUG langserver.core.MessageWriter - Content-Length: 189



{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:10,715] DEBUG langserver.core.MessageWriter - Content-Length: 189



{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:10,715] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:10,715] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:10,716] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Analyzer is ready!
[2019-01-20 12:37:10,716] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Analyzer is ready!
[2019-01-20 12:37:12,691] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding IndexerReadyEvent
[2019-01-20 12:37:12,691] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding IndexerReadyEvent
[2019-01-20 12:37:12,831] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding SendBackgroundMessageEvent(Initializing Analyzer. Please wait...,105)
[2019-01-20 12:37:12,831] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding SendBackgroundMessageEvent(Initializing Analyzer. Please wait...,105)
[2019-01-20 12:37:12,833] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding SendBackgroundMessageEvent(Initializing Analyzer. Please wait...,105)
[2019-01-20 12:37:12,833] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding SendBackgroundMessageEvent(Initializing Analyzer. Please wait...,105)
[2019-01-20 12:37:12,850] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:12,850] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:12,851] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":70}}}
[2019-01-20 12:37:12,851] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":70}}}
[2019-01-20 12:37:12,852] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 70).
[2019-01-20 12:37:12,852] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 70).
[2019-01-20 12:37:12,853] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(337,337))
[2019-01-20 12:37:12,853] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(337,337))
[2019-01-20 12:37:12,853] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(337,337))
[2019-01-20 12:37:12,853] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(337,337))
[2019-01-20 12:37:13,004] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:13,004] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:13,004] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}
[2019-01-20 12:37:13,004] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}
[2019-01-20 12:37:13,006] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(3)
[2019-01-20 12:37:13,006] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(3)
[2019-01-20 12:37:14,476] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:14,476] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:14,477] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":55}}}
[2019-01-20 12:37:14,477] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":55}}}
[2019-01-20 12:37:14,478] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 55).
[2019-01-20 12:37:14,478] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 55).
[2019-01-20 12:37:14,480] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(322,322))
[2019-01-20 12:37:14,480] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(322,322))
[2019-01-20 12:37:14,481] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(322,322))
[2019-01-20 12:37:14,481] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(322,322))
[2019-01-20 12:37:14,802] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:14,802] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:14,803] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}
[2019-01-20 12:37:14,803] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}
[2019-01-20 12:37:14,804] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(4)
[2019-01-20 12:37:14,804] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(4)
[2019-01-20 12:37:15,055] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:15,055] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:15,056] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":58}}}
[2019-01-20 12:37:15,056] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":58}}}
[2019-01-20 12:37:15,111] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 58).
[2019-01-20 12:37:15,111] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 58).
[2019-01-20 12:37:15,112] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(325,325))
[2019-01-20 12:37:15,112] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(325,325))
[2019-01-20 12:37:15,113] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(325,325))
[2019-01-20 12:37:15,113] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(325,325))
[2019-01-20 12:37:15,117] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? false
[2019-01-20 12:37:15,117] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? false
[2019-01-20 12:37:15,119] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? false
[2019-01-20 12:37:15,119] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? false
[2019-01-20 12:37:15,205] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:15,205] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:15,206] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}
[2019-01-20 12:37:15,206] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}
[2019-01-20 12:37:15,207] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(5)
[2019-01-20 12:37:15,207] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(5)
[2019-01-20 12:37:15,327] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? false
[2019-01-20 12:37:15,327] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? false
[2019-01-20 12:37:15,328] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? false
[2019-01-20 12:37:15,328] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? false
[2019-01-20 12:37:15,362] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:15,362] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:15,362] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":61}}}
[2019-01-20 12:37:15,362] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":61}}}
[2019-01-20 12:37:15,363] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 61).
[2019-01-20 12:37:15,363] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 61).
[2019-01-20 12:37:15,364] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(328,328))
[2019-01-20 12:37:15,364] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(328,328))
[2019-01-20 12:37:15,364] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(328,328))
[2019-01-20 12:37:15,364] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(328,328))
[2019-01-20 12:37:15,409] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:15,409] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 62
[2019-01-20 12:37:15,409] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}
[2019-01-20 12:37:15,409] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}
[2019-01-20 12:37:15,410] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(6)
[2019-01-20 12:37:15,410] ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(6)
[2019-01-20 12:37:15,866] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:15,866] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:15,866] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":73}}}
[2019-01-20 12:37:15,866] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":73}}}
[2019-01-20 12:37:16,291] INFO akka.actor.DeadLetterActorRef - Message [scala.Some] from Actor[akka://ENSIME/user/server/ensimeProject/project/scalac/praktikum3_compile#-2065073742] to Actor[akka://ENSIME/deadLetters] was not delivered. [2] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
[2019-01-20 12:37:16,302] INFO akka.actor.DeadLetterActorRef - Message [org.ensime.api.BasicTypeInfo] from Actor[akka://ENSIME/user/server/ensimeProject/project/scalac/praktikum3_compile#-2065073742] to Actor[akka://ENSIME/deadLetters] was not delivered. [3] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
[2019-01-20 12:37:16,303] INFO akka.actor.DeadLetterActorRef - Message [scala.Some] from Actor[akka://ENSIME/user/server/ensimeProject/project/scalac/praktikum3_compile#-2065073742] to Actor[akka://ENSIME/deadLetters] was not delivered. [4] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
[2019-01-20 12:37:16,304] INFO akka.actor.DeadLetterActorRef - Message [org.ensime.api.BasicTypeInfo] from Actor[akka://ENSIME/user/server/ensimeProject/project/scalac/praktikum3_compile#-2065073742] to Actor[akka://ENSIME/deadLetters] was not delivered. [5] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
[2019-01-20 12:37:16,306] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:16,306] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:16,307] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:16,307] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:16,317] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:16,318] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:16,317] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:16,318] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:16,319] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 73).
[2019-01-20 12:37:16,319] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 73).
[2019-01-20 12:37:16,320] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(340,340))
[2019-01-20 12:37:16,320] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(340,340))
[2019-01-20 12:37:16,320] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(340,340))
[2019-01-20 12:37:16,320] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(340,340))
[2019-01-20 12:37:16,338] INFO akka.actor.DeadLetterActorRef - Message [org.ensime.api.VoidResponse$] from Actor[akka://ENSIME/user/server/ensimeProject/project/scalac/praktikum3_compile#-2065073742] to Actor[akka://ENSIME/deadLetters] was not delivered. [6] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
[2019-01-20 12:37:17,041] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:17,041] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:17,041] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:17,041] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:17,046] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:17,046] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:17,046] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:17,046] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:17,049] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:17,049] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:17,049] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:17,049] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:17,053] DEBUG langserver.core.MessageWriter - Content-Length: 262



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":70},"end":{"line":7,"character":70}}},"id":3}
[2019-01-20 12:37:17,053] DEBUG langserver.core.MessageWriter - Content-Length: 262



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":70},"end":{"line":7,"character":70}}},"id":3}
[2019-01-20 12:37:17,053] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":70},"end":{"line":7,"character":70}}},"id":3}
[2019-01-20 12:37:17,053] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":70},"end":{"line":7,"character":70}}},"id":3}
[2019-01-20 12:37:17,054] DEBUG langserver.core.MessageWriter - Content-Length: 262



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":55},"end":{"line":7,"character":55}}},"id":4}
[2019-01-20 12:37:17,054] DEBUG langserver.core.MessageWriter - Content-Length: 262



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":55},"end":{"line":7,"character":55}}},"id":4}
[2019-01-20 12:37:17,054] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":55},"end":{"line":7,"character":55}}},"id":4}
[2019-01-20 12:37:17,054] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":55},"end":{"line":7,"character":55}}},"id":4}
[2019-01-20 12:37:17,070] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:17,070] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:17,070] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:17,070] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:17,071] DEBUG langserver.core.MessageWriter - Content-Length: 262



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":58},"end":{"line":7,"character":58}}},"id":5}
[2019-01-20 12:37:17,071] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:17,071] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:17,071] DEBUG langserver.core.MessageWriter - Content-Length: 262



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":58},"end":{"line":7,"character":58}}},"id":5}
[2019-01-20 12:37:17,071] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:17,071] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":58},"end":{"line":7,"character":58}}},"id":5}
[2019-01-20 12:37:17,071] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:17,071] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":58},"end":{"line":7,"character":58}}},"id":5}
[2019-01-20 12:37:17,075] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:17,075] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:17,075] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:17,075] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:17,077] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:17,077] DEBUG langserver.core.MessageWriter - Content-Length: 262



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":61},"end":{"line":7,"character":61}}},"id":6}
[2019-01-20 12:37:17,077] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:17,077] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:17,077] DEBUG langserver.core.MessageWriter - Content-Length: 262



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":61},"end":{"line":7,"character":61}}},"id":6}
[2019-01-20 12:37:17,077] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:17,077] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":61},"end":{"line":7,"character":61}}},"id":6}
[2019-01-20 12:37:17,077] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":61},"end":{"line":7,"character":61}}},"id":6}
[2019-01-20 12:37:17,080] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:17,080] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:17,080] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:17,080] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:17,080] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Full typecheck complete event
[2019-01-20 12:37:17,080] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Full typecheck complete event
[2019-01-20 12:37:17,080] INFO org.github.dragos.vscode.EnsimeLanguageServer - Received 0 notes.
[2019-01-20 12:37:17,080] INFO org.github.dragos.vscode.EnsimeLanguageServer - Received 0 notes.
[2019-01-20 12:37:17,081] DEBUG langserver.core.MessageWriter - Content-Length: 262



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":73},"end":{"line":7,"character":73}}},"id":7}
[2019-01-20 12:37:17,081] DEBUG langserver.core.MessageWriter - Content-Length: 262



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":73},"end":{"line":7,"character":73}}},"id":7}
[2019-01-20 12:37:17,081] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":73},"end":{"line":7,"character":73}}},"id":7}
[2019-01-20 12:37:17,081] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":73},"end":{"line":7,"character":73}}},"id":7}
[2019-01-20 12:37:17,081] DEBUG langserver.core.MessageWriter - Content-Length: 189



{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:17,081] DEBUG langserver.core.MessageWriter - Content-Length: 189



{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:17,081] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:17,081] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:17,117] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 225
[2019-01-20 12:37:17,117] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 225
[2019-01-20 12:37:17,118] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":8,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":74}}}
[2019-01-20 12:37:17,118] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":8,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":74}}}
[2019-01-20 12:37:17,119] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got goto definition request at (7, 74).
[2019-01-20 12:37:17,119] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got goto definition request at (7, 74).
[2019-01-20 12:37:17,121] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding SymbolAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),341)
[2019-01-20 12:37:17,121] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding SymbolAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),341)
[2019-01-20 12:37:17,131] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - Goto Definition future completed: succes? true
[2019-01-20 12:37:17,131] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - Goto Definition future completed: succes? true
[2019-01-20 12:37:17,132] DEBUG langserver.core.MessageWriter - Content-Length: 36



{"jsonrpc":"2.0","result":[],"id":8}
[2019-01-20 12:37:17,132] DEBUG langserver.core.MessageWriter - Content-Length: 36



{"jsonrpc":"2.0","result":[],"id":8}
[2019-01-20 12:37:17,132] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":[],"id":8}
[2019-01-20 12:37:17,132] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":[],"id":8}
[2019-01-20 12:37:20,349] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 221
[2019-01-20 12:37:20,349] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 221
[2019-01-20 12:37:20,350] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":123}}}
[2019-01-20 12:37:20,350] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":123}}}
[2019-01-20 12:37:20,351] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 123).
[2019-01-20 12:37:20,351] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 123).
[2019-01-20 12:37:20,351] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(390,390))
[2019-01-20 12:37:20,351] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(390,390))
[2019-01-20 12:37:20,352] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(390,390))
[2019-01-20 12:37:20,352] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(390,390))
[2019-01-20 12:37:20,354] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:20,354] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:20,354] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:20,354] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:20,357] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:20,357] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:20,357] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:20,357] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:20,358] DEBUG langserver.core.MessageWriter - Content-Length: 264



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":123},"end":{"line":7,"character":123}}},"id":9}
[2019-01-20 12:37:20,358] DEBUG langserver.core.MessageWriter - Content-Length: 264



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":123},"end":{"line":7,"character":123}}},"id":9}
[2019-01-20 12:37:20,358] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":123},"end":{"line":7,"character":123}}},"id":9}
[2019-01-20 12:37:20,358] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":123},"end":{"line":7,"character":123}}},"id":9}
[2019-01-20 12:37:20,654] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 222
[2019-01-20 12:37:20,654] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 222
[2019-01-20 12:37:20,655] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":122}}}
[2019-01-20 12:37:20,655] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":122}}}
[2019-01-20 12:37:20,655] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 122).
[2019-01-20 12:37:20,655] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 122).
[2019-01-20 12:37:20,656] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(389,389))
[2019-01-20 12:37:20,656] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(389,389))
[2019-01-20 12:37:20,656] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(389,389))
[2019-01-20 12:37:20,656] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(389,389))
[2019-01-20 12:37:20,658] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:20,658] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:20,658] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:20,658] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:20,661] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:20,661] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:20,661] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:20,661] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:20,662] DEBUG langserver.core.MessageWriter - Content-Length: 265



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":122},"end":{"line":7,"character":122}}},"id":10}
[2019-01-20 12:37:20,662] DEBUG langserver.core.MessageWriter - Content-Length: 265



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":122},"end":{"line":7,"character":122}}},"id":10}
[2019-01-20 12:37:20,662] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":122},"end":{"line":7,"character":122}}},"id":10}
[2019-01-20 12:37:20,662] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":122},"end":{"line":7,"character":122}}},"id":10}
[2019-01-20 12:37:21,472] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 222
[2019-01-20 12:37:21,472] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 222
[2019-01-20 12:37:21,473] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":123}}}
[2019-01-20 12:37:21,473] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":7,"character":123}}}
[2019-01-20 12:37:21,474] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 123).
[2019-01-20 12:37:21,474] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (7, 123).
[2019-01-20 12:37:21,474] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(390,390))
[2019-01-20 12:37:21,474] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(390,390))
[2019-01-20 12:37:21,475] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(390,390))
[2019-01-20 12:37:21,475] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(390,390))
[2019-01-20 12:37:21,477] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:21,477] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:21,477] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:21,477] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:21,479] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:21,479] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:21,479] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:21,479] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),Class,java.lang.String("/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml"),List(),List(),None,List())
[2019-01-20 12:37:21,480] DEBUG langserver.core.MessageWriter - Content-Length: 265



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":123},"end":{"line":7,"character":123}}},"id":11}
[2019-01-20 12:37:21,480] DEBUG langserver.core.MessageWriter - Content-Length: 265



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":123},"end":{"line":7,"character":123}}},"id":11}
[2019-01-20 12:37:21,480] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":123},"end":{"line":7,"character":123}}},"id":11}
[2019-01-20 12:37:21,480] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"java.lang.String(\"/Users/max/Documents/Proggerzeugs/SCALAworkspace/Praktikum3/src/main/scala/alben.xml\")"}],"range":{"start":{"line":7,"character":123},"end":{"line":7,"character":123}}},"id":11}
[2019-01-20 12:37:25,537] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 6187
[2019-01-20 12:37:25,537] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 6187
[2019-01-20 12:37:25,540] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","version":2},"contentChanges":[{"text":"import scala.io.Source\n\ncase class Album(title: String, date: String, artist: String, tracks: List[Track])\ncase class Track(title: String, length: String, rating: Int, features: List[String], writers: List[String]) \n\nobject main {\n    def main(args: Array[String]) {\n        val list: List[Char] = Source.fromFile(\"alben.xml\").mkString.toCharArray.toList\n        val tokenList: List[String] = createTokenList(list, List[String](), \"\")\n        val tokenListe: List[String] =  filter[String](\n                                            polyMap[List[Char],String](\n                                                partition[Char](\n                                                    filter[Char](list\n                                                    ,a => a != '\\n' & a != '\\r' & a != '\\t')\n                                                ,z => z == '<' | z == '>')\n                                            , y => y.mkString)\n                                        , x => x.isEmpty == false)\n        val albumList: List[Album] = parseFile(tokenList, List[Album]())\n        val thriller = albumList(0)\n        /* println(thriller) */\n        /* println(map[Album](albumList, Album => Album.copy(title = Album.title.toUpperCase()))) */\n        /* println(map[Album](albumList, Album => {Album.copy(title = Album.title.toUpperCase()); Album.copy(tracks = map[Track](Album.tracks,Album => Album.copy(Album.title.toUpperCase())))})) */\n        /* println(polyMap[Track,String](thriller.tracks, Track => Track.length)) */\n        /* println(filter[Track,Track](thriller.tracks, Track => Track.rating > 4)) */\n        /* println(polyMap[Track,String](filter[Track,Track](thriller.tracks, Track => Track.writers(0) == \"Rod Temperton\"), Track => Track.title)) */\n        /* println(partition[Track](thriller.tracks, Track => Track.title == \"Thriller\")) */\n        /* println(tokenListe) */\n        /* println(vierA(_*_,x=>x,2,3)) */\n        /* println(range(2,3).map(x=>x).reduceLeft(_+_)) */\n\n    }\n    \n    def map[A](input_list: List[A], func: A=>A) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs => func(x) :: map(xs,func)\n    }\n\n    def polyMap[A,B](input_list: List[A], func: A=>B) : List[B] = input_list match {\n        case Nil => List[B]()\n        case x::xs => func(x) :: polyMap(xs,func)\n    }\n\n    def filter[A](input_list: List[A], condition: A=>Boolean) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs =>  condition(x) match {\n            case true => x :: filter(xs,condition)\n            case false => filter(xs,condition)\n        } \n    }\n\n    def partition[A](input_list: List[A], condition: A=>Boolean) : List[List[A]] = input_list match {\n        case Nil => List[A]() :: List[List[A]]()\n        case x::xs =>  condition(x) match {\n            case true => List[A]() :: partition[A](xs,condition) \n            case false => val y = partition(xs,condition); (List[A](x) ::: y.head)::y.tail\n        }\n    } \n    \n    def vierA(conc: (Int,Int) => Int, f: Int => Int, start: Int, end: Int) : Int = \n        if (start == end) end  else conc(f(start),vierA(conc,f,start+1,end)) \n\n    def range(x:Int,y:Int) : List[Int] = if (x>y) Nil else x::range(x+1,y)\n\n    def createTokenList(list:List[Char], tokenList:List[String], token:String) : List[String] = list match {\n        case Nil => return tokenList\n        case '<'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ => return createTokenList(xs,tokenList :+ token,\"\")\n        }  \n        case '>'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ =>  return createTokenList(xs,tokenList :+ token,\"\")\n        }\n        case '\\n'::xs => return createTokenList(xs,tokenList,token)\n        case '\\t'::xs => return createTokenList(xs,tokenList,token)\n        case '\\r'::xs => return createTokenList(xs,tokenList,token)\n        case x::xs => return createTokenList(xs,tokenList,token+x)\n    } \n\n    def parseFile(tokenList:List[String]) : List[Album] =\n    {\n        return parseFile(tokenList, List[Album]())\n    }\n\n    def parseFile(tokenList:List[String], albumList:List[Album]) : List[Album] = tokenList match {\n        case Nil => return albumList\n        case \"album\"::xs => val(tokenListRest, album) = createAlbum(xs, Album(\"\",\"\",\"\",List[Track]())); \n                            return parseFile(tokenListRest, albumList :+ album)\n    } \n\n    def createAlbum(tokenList:List[String], album:Album) : (List[String], Album) = tokenList match {\n        case \"/album\"::xs => return (xs, album)\n        case \"track\"::xs => val (tokenListRest, track) = createTrack(xs, Track(\"\",\"\",0,List[String](),List[String]())); \n                            return createAlbum(tokenListRest, album.copy(tracks = album.tracks :+ track))\n        case \"artist\"::artist::_::xs => return createAlbum(xs, album.copy(artist = artist))\n        case \"title\"::title::_::xs => return createAlbum(xs, album.copy(title = title))\n        case \"date\"::date::_::xs => return createAlbum(xs, album.copy(date = date))\n    }\n\n    def createTrack(tokenList:List[String], track:Track)  : (List[String], Track) = tokenList match {\n        case \"/track\"::xs => return (xs, track)\n        case \"title\"::title::xs => return createTrack(xs.tail, track.copy(title = title))\n        case \"length\"::length::xs => return createTrack(xs.tail, track.copy(length = length))\n        case \"rating\"::rating::xs => return createTrack(xs.tail, track.copy(rating = rating.toInt))\n        case \"feature\"::feature::xs => return createTrack(xs.tail, track.copy(features = track.features :+ feature))\n        case \"writing\"::writer::xs => return createTrack(xs.tail, track.copy(writers = track.writers :+ writer))\n    }\n}\n\n"}]}}
[2019-01-20 12:37:25,540] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","version":2},"contentChanges":[{"text":"import scala.io.Source\n\ncase class Album(title: String, date: String, artist: String, tracks: List[Track])\ncase class Track(title: String, length: String, rating: Int, features: List[String], writers: List[String]) \n\nobject main {\n    def main(args: Array[String]) {\n        val list: List[Char] = Source.fromFile(\"alben.xml\").mkString.toCharArray.toList\n        val tokenList: List[String] = createTokenList(list, List[String](), \"\")\n        val tokenListe: List[String] =  filter[String](\n                                            polyMap[List[Char],String](\n                                                partition[Char](\n                                                    filter[Char](list\n                                                    ,a => a != '\\n' & a != '\\r' & a != '\\t')\n                                                ,z => z == '<' | z == '>')\n                                            , y => y.mkString)\n                                        , x => x.isEmpty == false)\n        val albumList: List[Album] = parseFile(tokenList, List[Album]())\n        val thriller = albumList(0)\n        /* println(thriller) */\n        /* println(map[Album](albumList, Album => Album.copy(title = Album.title.toUpperCase()))) */\n        /* println(map[Album](albumList, Album => {Album.copy(title = Album.title.toUpperCase()); Album.copy(tracks = map[Track](Album.tracks,Album => Album.copy(Album.title.toUpperCase())))})) */\n        /* println(polyMap[Track,String](thriller.tracks, Track => Track.length)) */\n        /* println(filter[Track,Track](thriller.tracks, Track => Track.rating > 4)) */\n        /* println(polyMap[Track,String](filter[Track,Track](thriller.tracks, Track => Track.writers(0) == \"Rod Temperton\"), Track => Track.title)) */\n        /* println(partition[Track](thriller.tracks, Track => Track.title == \"Thriller\")) */\n        /* println(tokenListe) */\n        /* println(vierA(_*_,x=>x,2,3)) */\n        /* println(range(2,3).map(x=>x).reduceLeft(_+_)) */\n\n    }\n    \n    def map[A](input_list: List[A], func: A=>A) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs => func(x) :: map(xs,func)\n    }\n\n    def polyMap[A,B](input_list: List[A], func: A=>B) : List[B] = input_list match {\n        case Nil => List[B]()\n        case x::xs => func(x) :: polyMap(xs,func)\n    }\n\n    def filter[A](input_list: List[A], condition: A=>Boolean) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs =>  condition(x) match {\n            case true => x :: filter(xs,condition)\n            case false => filter(xs,condition)\n        } \n    }\n\n    def partition[A](input_list: List[A], condition: A=>Boolean) : List[List[A]] = input_list match {\n        case Nil => List[A]() :: List[List[A]]()\n        case x::xs =>  condition(x) match {\n            case true => List[A]() :: partition[A](xs,condition) \n            case false => val y = partition(xs,condition); (List[A](x) ::: y.head)::y.tail\n        }\n    } \n    \n    def vierA(conc: (Int,Int) => Int, f: Int => Int, start: Int, end: Int) : Int = \n        if (start == end) end  else conc(f(start),vierA(conc,f,start+1,end)) \n\n    def range(x:Int,y:Int) : List[Int] = if (x>y) Nil else x::range(x+1,y)\n\n    def createTokenList(list:List[Char], tokenList:List[String], token:String) : List[String] = list match {\n        case Nil => return tokenList\n        case '<'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ => return createTokenList(xs,tokenList :+ token,\"\")\n        }  \n        case '>'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ =>  return createTokenList(xs,tokenList :+ token,\"\")\n        }\n        case '\\n'::xs => return createTokenList(xs,tokenList,token)\n        case '\\t'::xs => return createTokenList(xs,tokenList,token)\n        case '\\r'::xs => return createTokenList(xs,tokenList,token)\n        case x::xs => return createTokenList(xs,tokenList,token+x)\n    } \n\n    def parseFile(tokenList:List[String]) : List[Album] =\n    {\n        return parseFile(tokenList, List[Album]())\n    }\n\n    def parseFile(tokenList:List[String], albumList:List[Album]) : List[Album] = tokenList match {\n        case Nil => return albumList\n        case \"album\"::xs => val(tokenListRest, album) = createAlbum(xs, Album(\"\",\"\",\"\",List[Track]())); \n                            return parseFile(tokenListRest, albumList :+ album)\n    } \n\n    def createAlbum(tokenList:List[String], album:Album) : (List[String], Album) = tokenList match {\n        case \"/album\"::xs => return (xs, album)\n        case \"track\"::xs => val (tokenListRest, track) = createTrack(xs, Track(\"\",\"\",0,List[String](),List[String]())); \n                            return createAlbum(tokenListRest, album.copy(tracks = album.tracks :+ track))\n        case \"artist\"::artist::_::xs => return createAlbum(xs, album.copy(artist = artist))\n        case \"title\"::title::_::xs => return createAlbum(xs, album.copy(title = title))\n        case \"date\"::date::_::xs => return createAlbum(xs, album.copy(date = date))\n    }\n\n    def createTrack(tokenList:List[String], track:Track)  : (List[String], Track) = tokenList match {\n        case \"/track\"::xs => return (xs, track)\n        case \"title\"::title::xs => return createTrack(xs.tail, track.copy(title = title))\n        case \"length\"::length::xs => return createTrack(xs.tail, track.copy(length = length))\n        case \"rating\"::rating::xs => return createTrack(xs.tail, track.copy(rating = rating.toInt))\n        case \"feature\"::feature::xs => return createTrack(xs.tail, track.copy(features = track.features :+ feature))\n        case \"writing\"::writer::xs => return createTrack(xs.tail, track.copy(writers = track.writers :+ writer))\n    }\n}\n\n"}]}}
[2019-01-20 12:37:25,546] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypecheckFileReq(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None))
[2019-01-20 12:37:25,546] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypecheckFileReq(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None))
[2019-01-20 12:37:25,560] INFO akka.actor.DeadLetterActorRef - Message [org.ensime.api.VoidResponse$] from Actor[akka://ENSIME/user/server/ensimeProject/project/scalac/praktikum3_compile#-2065073742] to Actor[akka://ENSIME/deadLetters] was not delivered. [7] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
[2019-01-20 12:37:25,995] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Full typecheck complete event
[2019-01-20 12:37:25,995] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Full typecheck complete event
[2019-01-20 12:37:25,995] INFO org.github.dragos.vscode.EnsimeLanguageServer - Received 0 notes.
[2019-01-20 12:37:25,995] INFO org.github.dragos.vscode.EnsimeLanguageServer - Received 0 notes.
[2019-01-20 12:37:25,995] DEBUG langserver.core.MessageWriter - Content-Length: 189



{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:25,995] DEBUG langserver.core.MessageWriter - Content-Length: 189



{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:25,996] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:25,996] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:26,874] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 6187
[2019-01-20 12:37:26,874] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 6187
[2019-01-20 12:37:26,877] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","version":2},"contentChanges":[{"text":"import scala.io.Source\n\ncase class Album(title: String, date: String, artist: String, tracks: List[Track])\ncase class Track(title: String, length: String, rating: Int, features: List[String], writers: List[String]) \n\nobject main {\n    def main(args: Array[String]) {\n        val list: List[Char] = Source.fromFile(\"alben.xml\").mkString.toCharArray.toList\n        val tokenList: List[String] = createTokenList(list, List[String](), \"\")\n        val tokenListe: List[String] =  filter[String](\n                                            polyMap[List[Char],String](\n                                                partition[Char](\n                                                    filter[Char](list\n                                                    ,a => a != '\\n' & a != '\\r' & a != '\\t')\n                                                ,z => z == '<' | z == '>')\n                                            , y => y.mkString)\n                                        , x => x.isEmpty == false)\n        val albumList: List[Album] = parseFile(tokenList, List[Album]())\n        val thriller = albumList(0)\n        /* println(thriller) */\n        /* println(map[Album](albumList, Album => Album.copy(title = Album.title.toUpperCase()))) */\n        /* println(map[Album](albumList, Album => {Album.copy(title = Album.title.toUpperCase()); Album.copy(tracks = map[Track](Album.tracks,Album => Album.copy(Album.title.toUpperCase())))})) */\n        /* println(polyMap[Track,String](thriller.tracks, Track => Track.length)) */\n        /* println(filter[Track,Track](thriller.tracks, Track => Track.rating > 4)) */\n        /* println(polyMap[Track,String](filter[Track,Track](thriller.tracks, Track => Track.writers(0) == \"Rod Temperton\"), Track => Track.title)) */\n        /* println(partition[Track](thriller.tracks, Track => Track.title == \"Thriller\")) */\n        /* println(tokenListe) */\n        /* println(vierA(_*_,x=>x,2,3)) */\n        /* println(range(2,3).map(x=>x).reduceLeft(_+_)) */\n\n    }\n    \n    def map[A](input_list: List[A], func: A=>A) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs => func(x) :: map(xs,func)\n    }\n\n    def polyMap[A,B](input_list: List[A], func: A=>B) : List[B] = input_list match {\n        case Nil => List[B]()\n        case x::xs => func(x) :: polyMap(xs,func)\n    }\n\n    def filter[A](input_list: List[A], condition: A=>Boolean) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs =>  condition(x) match {\n            case true => x :: filter(xs,condition)\n            case false => filter(xs,condition)\n        } \n    }\n\n    def partition[A](input_list: List[A], condition: A=>Boolean) : List[List[A]] = input_list match {\n        case Nil => List[A]() :: List[List[A]]()\n        case x::xs =>  condition(x) match {\n            case true => List[A]() :: partition[A](xs,condition) \n            case false => val y = partition(xs,condition); (List[A](x) ::: y.head)::y.tail\n        }\n    } \n    \n    def vierA(conc: (Int,Int) => Int, f: Int => Int, start: Int, end: Int) : Int = \n        if (start == end) end  else conc(f(start),vierA(conc,f,start+1,end)) \n\n    def range(x:Int,y:Int) : List[Int] = if (x>y) Nil else x::range(x+1,y)\n\n    def createTokenList(list:List[Char], tokenList:List[String], token:String) : List[String] = list match {\n        case Nil => return tokenList\n        case '<'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ => return createTokenList(xs,tokenList :+ token,\"\")\n        }  \n        case '>'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ =>  return createTokenList(xs,tokenList :+ token,\"\")\n        }\n        case '\\n'::xs => return createTokenList(xs,tokenList,token)\n        case '\\t'::xs => return createTokenList(xs,tokenList,token)\n        case '\\r'::xs => return createTokenList(xs,tokenList,token)\n        case x::xs => return createTokenList(xs,tokenList,token+x)\n    } \n\n    def parseFile(tokenList:List[String]) : List[Album] =\n    {\n        return parseFile(tokenList, List[Album]())\n    }\n\n    def parseFile(tokenList:List[String], albumList:List[Album]) : List[Album] = tokenList match {\n        case Nil => return albumList\n        case \"album\"::xs => val(tokenListRest, album) = createAlbum(xs, Album(\"\",\"\",\"\",List[Track]())); \n                            return parseFile(tokenListRest, albumList :+ album)\n    } \n\n    def createAlbum(tokenList:List[String], album:Album) : (List[String], Album) = tokenList match {\n        case \"/album\"::xs => return (xs, album)\n        case \"track\"::xs => val (tokenListRest, track) = createTrack(xs, Track(\"\",\"\",0,List[String](),List[String]())); \n                            return createAlbum(tokenListRest, album.copy(tracks = album.tracks :+ track))\n        case \"artist\"::artist::_::xs => return createAlbum(xs, album.copy(artist = artist))\n        case \"title\"::title::_::xs => return createAlbum(xs, album.copy(title = title))\n        case \"date\"::date::_::xs => return createAlbum(xs, album.copy(date = date))\n    }\n\n    def createTrack(tokenList:List[String], track:Track)  : (List[String], Track) = tokenList match {\n        case \"/track\"::xs => return (xs, track)\n        case \"title\"::title::xs => return createTrack(xs.tail, track.copy(title = title))\n        case \"length\"::length::xs => return createTrack(xs.tail, track.copy(length = length))\n        case \"rating\"::rating::xs => return createTrack(xs.tail, track.copy(rating = rating.toInt))\n        case \"feature\"::feature::xs => return createTrack(xs.tail, track.copy(features = track.features :+ feature))\n        case \"writing\"::writer::xs => return createTrack(xs.tail, track.copy(writers = track.writers :+ writer))\n    }\n}\n\n"}]}}
[2019-01-20 12:37:26,877] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","version":2},"contentChanges":[{"text":"import scala.io.Source\n\ncase class Album(title: String, date: String, artist: String, tracks: List[Track])\ncase class Track(title: String, length: String, rating: Int, features: List[String], writers: List[String]) \n\nobject main {\n    def main(args: Array[String]) {\n        val list: List[Char] = Source.fromFile(\"alben.xml\").mkString.toCharArray.toList\n        val tokenList: List[String] = createTokenList(list, List[String](), \"\")\n        val tokenListe: List[String] =  filter[String](\n                                            polyMap[List[Char],String](\n                                                partition[Char](\n                                                    filter[Char](list\n                                                    ,a => a != '\\n' & a != '\\r' & a != '\\t')\n                                                ,z => z == '<' | z == '>')\n                                            , y => y.mkString)\n                                        , x => x.isEmpty == false)\n        val albumList: List[Album] = parseFile(tokenList, List[Album]())\n        val thriller = albumList(0)\n        /* println(thriller) */\n        /* println(map[Album](albumList, Album => Album.copy(title = Album.title.toUpperCase()))) */\n        /* println(map[Album](albumList, Album => {Album.copy(title = Album.title.toUpperCase()); Album.copy(tracks = map[Track](Album.tracks,Album => Album.copy(Album.title.toUpperCase())))})) */\n        /* println(polyMap[Track,String](thriller.tracks, Track => Track.length)) */\n        /* println(filter[Track,Track](thriller.tracks, Track => Track.rating > 4)) */\n        /* println(polyMap[Track,String](filter[Track,Track](thriller.tracks, Track => Track.writers(0) == \"Rod Temperton\"), Track => Track.title)) */\n        /* println(partition[Track](thriller.tracks, Track => Track.title == \"Thriller\")) */\n        /* println(tokenListe) */\n        /* println(vierA(_*_,x=>x,2,3)) */\n        /* println(range(2,3).map(x=>x).reduceLeft(_+_)) */\n\n    }\n    \n    def map[A](input_list: List[A], func: A=>A) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs => func(x) :: map(xs,func)\n    }\n\n    def polyMap[A,B](input_list: List[A], func: A=>B) : List[B] = input_list match {\n        case Nil => List[B]()\n        case x::xs => func(x) :: polyMap(xs,func)\n    }\n\n    def filter[A](input_list: List[A], condition: A=>Boolean) : List[A] = input_list match {\n        case Nil => List[A]()\n        case x::xs =>  condition(x) match {\n            case true => x :: filter(xs,condition)\n            case false => filter(xs,condition)\n        } \n    }\n\n    def partition[A](input_list: List[A], condition: A=>Boolean) : List[List[A]] = input_list match {\n        case Nil => List[A]() :: List[List[A]]()\n        case x::xs =>  condition(x) match {\n            case true => List[A]() :: partition[A](xs,condition) \n            case false => val y = partition(xs,condition); (List[A](x) ::: y.head)::y.tail\n        }\n    } \n    \n    def vierA(conc: (Int,Int) => Int, f: Int => Int, start: Int, end: Int) : Int = \n        if (start == end) end  else conc(f(start),vierA(conc,f,start+1,end)) \n\n    def range(x:Int,y:Int) : List[Int] = if (x>y) Nil else x::range(x+1,y)\n\n    def createTokenList(list:List[Char], tokenList:List[String], token:String) : List[String] = list match {\n        case Nil => return tokenList\n        case '<'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ => return createTokenList(xs,tokenList :+ token,\"\")\n        }  \n        case '>'::xs => token match {\n            case \"\" => return createTokenList(xs,tokenList,token)\n            case _ =>  return createTokenList(xs,tokenList :+ token,\"\")\n        }\n        case '\\n'::xs => return createTokenList(xs,tokenList,token)\n        case '\\t'::xs => return createTokenList(xs,tokenList,token)\n        case '\\r'::xs => return createTokenList(xs,tokenList,token)\n        case x::xs => return createTokenList(xs,tokenList,token+x)\n    } \n\n    def parseFile(tokenList:List[String]) : List[Album] =\n    {\n        return parseFile(tokenList, List[Album]())\n    }\n\n    def parseFile(tokenList:List[String], albumList:List[Album]) : List[Album] = tokenList match {\n        case Nil => return albumList\n        case \"album\"::xs => val(tokenListRest, album) = createAlbum(xs, Album(\"\",\"\",\"\",List[Track]())); \n                            return parseFile(tokenListRest, albumList :+ album)\n    } \n\n    def createAlbum(tokenList:List[String], album:Album) : (List[String], Album) = tokenList match {\n        case \"/album\"::xs => return (xs, album)\n        case \"track\"::xs => val (tokenListRest, track) = createTrack(xs, Track(\"\",\"\",0,List[String](),List[String]())); \n                            return createAlbum(tokenListRest, album.copy(tracks = album.tracks :+ track))\n        case \"artist\"::artist::_::xs => return createAlbum(xs, album.copy(artist = artist))\n        case \"title\"::title::_::xs => return createAlbum(xs, album.copy(title = title))\n        case \"date\"::date::_::xs => return createAlbum(xs, album.copy(date = date))\n    }\n\n    def createTrack(tokenList:List[String], track:Track)  : (List[String], Track) = tokenList match {\n        case \"/track\"::xs => return (xs, track)\n        case \"title\"::title::xs => return createTrack(xs.tail, track.copy(title = title))\n        case \"length\"::length::xs => return createTrack(xs.tail, track.copy(length = length))\n        case \"rating\"::rating::xs => return createTrack(xs.tail, track.copy(rating = rating.toInt))\n        case \"feature\"::feature::xs => return createTrack(xs.tail, track.copy(features = track.features :+ feature))\n        case \"writing\"::writer::xs => return createTrack(xs.tail, track.copy(writers = track.writers :+ writer))\n    }\n}\n\n"}]}}
[2019-01-20 12:37:26,880] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 190
[2019-01-20 12:37:26,880] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 190
[2019-01-20 12:37:26,880] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypecheckFileReq(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None))
[2019-01-20 12:37:26,880] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypecheckFileReq(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None))
[2019-01-20 12:37:26,880] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","version":2}}}
[2019-01-20 12:37:26,880] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","version":2}}}
[2019-01-20 12:37:26,885] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - saveTextDocuemnt TextDocumentIdentifier(file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala)
[2019-01-20 12:37:26,885] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - saveTextDocuemnt TextDocumentIdentifier(file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala)
[2019-01-20 12:37:26,895] INFO akka.actor.DeadLetterActorRef - Message [org.ensime.api.VoidResponse$] from Actor[akka://ENSIME/user/server/ensimeProject/project/scalac/praktikum3_compile#-2065073742] to Actor[akka://ENSIME/deadLetters] was not delivered. [8] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
[2019-01-20 12:37:27,248] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Full typecheck complete event
[2019-01-20 12:37:27,248] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Full typecheck complete event
[2019-01-20 12:37:27,249] INFO org.github.dragos.vscode.EnsimeLanguageServer - Received 0 notes.
[2019-01-20 12:37:27,249] INFO org.github.dragos.vscode.EnsimeLanguageServer - Received 0 notes.
[2019-01-20 12:37:27,249] DEBUG langserver.core.MessageWriter - Content-Length: 189



{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:27,249] DEBUG langserver.core.MessageWriter - Content-Length: 189



{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:27,250] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:27,250] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala","diagnostics":[]}}
[2019-01-20 12:37:34,796] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:34,796] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:34,797] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":3,"character":9}}}
[2019-01-20 12:37:34,797] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":3,"character":9}}}
[2019-01-20 12:37:34,798] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (3, 9).
[2019-01-20 12:37:34,798] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (3, 9).
[2019-01-20 12:37:34,798] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(116,116))
[2019-01-20 12:37:34,798] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(116,116))
[2019-01-20 12:37:34,798] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(116,116))
[2019-01-20 12:37:34,798] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(116,116))
[2019-01-20 12:37:34,801] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:34,801] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:34,801] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:34,801] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:34,802] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:34,802] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(Track,Class,Track,List(),List(),Some(OffsetSourcePosition(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),118)),List())
[2019-01-20 12:37:34,802] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:34,802] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(Track,Class,Track,List(),List(),Some(OffsetSourcePosition(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),118)),List())
[2019-01-20 12:37:34,803] DEBUG langserver.core.MessageWriter - Content-Length: 160



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"Track"}],"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}}},"id":12}
[2019-01-20 12:37:34,803] DEBUG langserver.core.MessageWriter - Content-Length: 160



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"Track"}],"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}}},"id":12}
[2019-01-20 12:37:34,803] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"Track"}],"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}}},"id":12}
[2019-01-20 12:37:34,803] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"Track"}],"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}}},"id":12}
[2019-01-20 12:37:35,002] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:35,002] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 220
[2019-01-20 12:37:35,003] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":2,"character":9}}}
[2019-01-20 12:37:35,003] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":2,"character":9}}}
[2019-01-20 12:37:35,004] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (2, 9).
[2019-01-20 12:37:35,004] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (2, 9).
[2019-01-20 12:37:35,004] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(33,33))
[2019-01-20 12:37:35,004] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(33,33))
[2019-01-20 12:37:35,004] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(33,33))
[2019-01-20 12:37:35,004] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(33,33))
[2019-01-20 12:37:35,006] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:35,006] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:35,006] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:35,006] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:35,007] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(Album,Class,Album,List(),List(),Some(OffsetSourcePosition(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),35)),List())
[2019-01-20 12:37:35,007] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(Album,Class,Album,List(),List(),Some(OffsetSourcePosition(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),35)),List())
[2019-01-20 12:37:35,007] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:35,007] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:35,008] DEBUG langserver.core.MessageWriter - Content-Length: 160



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"Album"}],"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":9}}},"id":13}
[2019-01-20 12:37:35,008] DEBUG langserver.core.MessageWriter - Content-Length: 160



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"Album"}],"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":9}}},"id":13}
[2019-01-20 12:37:35,008] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"Album"}],"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":9}}},"id":13}
[2019-01-20 12:37:35,008] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"Album"}],"range":{"start":{"line":2,"character":9},"end":{"line":2,"character":9}}},"id":13}
[2019-01-20 12:37:39,037] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 222
[2019-01-20 12:37:39,037] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 222
[2019-01-20 12:37:39,038] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":21,"character":30}}}
[2019-01-20 12:37:39,038] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala"},"position":{"line":21,"character":30}}}
[2019-01-20 12:37:39,039] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (21, 30).
[2019-01-20 12:37:39,039] INFO org.github.dragos.vscode.EnsimeLanguageServer - Got hover request at (21, 30).
[2019-01-20 12:37:39,039] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(1268,1268))
[2019-01-20 12:37:39,039] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding DocUriAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(1268,1268))
[2019-01-20 12:37:39,040] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(1268,1268))
[2019-01-20 12:37:39,040] DEBUG org.github.dragos.vscode.ensime.EnsimeProjectServer - Forwarding TypeAtPointReq(Right(SourceFileInfo(RawFile(/Users/max/Documents/Proggerzeugs/SCALAworkspace/praktikum3/src/main/scala/Main.scala),Some(...),None)),OffsetRange(1268,1268))
[2019-01-20 12:37:39,065] WARN org.ensime.core.RichPresentationCompiler - No definition found. Please report to https://github.com/ensime/ensime-server/issues/492 what you expected for class scala.reflect.internal.Trees$Block: Block(List(ValDef(Modifiers(), TermName("list"), TypeTree().setOriginal(AppliedTypeTree(Select(Select(Ident(scala), scala.package), TypeName("List")), List(TypeTree().setOriginal(Select(Ident(scala), scala.Char))))), Select(Apply(Select(Select(Ident(scala), scala.Predef), TermName("charArrayOps")), List(Apply(Select(Select(Apply(Apply(Select(Select(Select(Ident(scala), scala.io), scala.io.Source), TermName("fromFile")), List(Literal(Constant("alben.xml")))), List(Select(Select(This(TypeName("io")), scala.io.Codec), TermName("fallbackSystemCodec")))), TermName("mkString")), TermName("toCharArray")), List()))), TermName("toList"))), ValDef(Modifiers(), TermName("tokenList"), TypeTree().setOriginal(AppliedTypeTree(Select(Select(Ident(scala), scala.package), TypeName("List")), List(TypeTree().setOriginal(Select(Select(Ident(scala), scala.Predef), TypeName("String")))))), Apply(Select(This(TypeName("main")), TermName("createTokenList")), List(Ident(TermName("list")), Apply(TypeApply(Select(Select(Select(Select(Ident(scala), scala.collection), scala.collection.immutable), scala.collection.immutable.List), TermName("apply")), List(TypeTree().setOriginal(Select(Select(Ident(scala), scala.Predef), TypeName("String"))))), List()), Literal(Constant(""))))), ValDef(Modifiers(), TermName("tokenListe"), TypeTree().setOriginal(AppliedTypeTree(Select(Select(Ident(scala), scala.package), TypeName("List")), List(TypeTree().setOriginal(Select(Select(Ident(scala), scala.Predef), TypeName("String")))))), Apply(TypeApply(Select(This(TypeName("main")), TermName("filter")), List(TypeTree().setOriginal(Select(Select(Ident(scala), scala.Predef), TypeName("String"))))), List(Apply(TypeApply(Select(This(TypeName("main")), TermName("polyMap")), List(TypeTree().setOriginal(AppliedTypeTree(Select(Select(Ident(scala), scala.package), TypeName("List")), List(TypeTree().setOriginal(Select(Ident(scala), scala.Char))))), TypeTree().setOriginal(Select(Select(Ident(scala), scala.Predef), TypeName("String"))))), List(Apply(TypeApply(Select(This(TypeName("main")), TermName("partition")), List(TypeTree().setOriginal(Select(Ident(scala), scala.Char)))), List(Apply(TypeApply(Select(This(TypeName("main")), TermName("filter")), List(TypeTree().setOriginal(Select(Ident(scala), scala.Char)))), List(Ident(TermName("list")), Function(List(ValDef(Modifiers(PARAM), TermName("a"), TypeTree(), EmptyTree)), Apply(Select(Apply(Select(Apply(Select(Ident(TermName("a")), TermName("$bang$eq")), List(Literal(Constant(
)))), TermName("$amp")), List(Apply(Select(Ident(TermName("a")), TermName("$bang$eq")), List(Literal(Constant()))))), TermName("$amp")), List(Apply(Select(Ident(TermName("a")), TermName("$bang$eq")), List(Literal(Constant(	))))))))), Function(List(ValDef(Modifiers(PARAM), TermName("z"), TypeTree(), EmptyTree)), Apply(Select(Apply(Select(Ident(TermName("z")), TermName("$eq$eq")), List(Literal(Constant(<)))), TermName("$bar")), List(Apply(Select(Ident(TermName("z")), TermName("$eq$eq")), List(Literal(Constant(>))))))))), Function(List(ValDef(Modifiers(PARAM), TermName("y"), TypeTree(), EmptyTree)), Select(Ident(TermName("y")), TermName("mkString"))))), Function(List(ValDef(Modifiers(PARAM), TermName("x"), TypeTree(), EmptyTree)), Apply(Select(Apply(Select(Ident(TermName("x")), TermName("isEmpty")), List()), TermName("$eq$eq")), List(Literal(Constant(false)))))))), ValDef(Modifiers(), TermName("albumList"), TypeTree().setOriginal(AppliedTypeTree(Select(Select(Ident(scala), scala.package), TypeName("List")), List(TypeTree().setOriginal(Ident(Album))))), Apply(Select(This(TypeName("main")), TermName("parseFile")), List(Ident(TermName("tokenList")), Apply(TypeApply(Select(Select(Select(Select(Ident(scala), scala.collection), scala.collection.immutable), scala.collection.immutable.List), TermName("apply")), List(TypeTree().setOriginal(Ident(Album)))), List())))), ValDef(Modifiers(), TermName("thriller"), TypeTree(), Apply(Select(Ident(TermName("albumList")), TermName("apply")), List(Literal(Constant(0)))))), Literal(Constant(())))
[2019-01-20 12:37:39,066] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:39,066] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:39,066] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved signature  from @sigPair
[2019-01-20 12:37:39,066] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - DocUriAtPointReq future completed: succes? true
[2019-01-20 12:37:39,113] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:39,113] DEBUG org.github.dragos.vscode.EnsimeLanguageServer - TypeAtPointReq future completed: succes? true
[2019-01-20 12:37:39,113] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(Unit,Class,scala.Unit,List(),List(),Some(OffsetSourcePosition(ArchiveFile(/Users/max/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.12.7-sources.jar,/scala/Unit.scala),1026)),List())
[2019-01-20 12:37:39,113] INFO org.github.dragos.vscode.EnsimeLanguageServer - Retrieved typeInfo BasicTypeInfo(Unit,Class,scala.Unit,List(),List(),Some(OffsetSourcePosition(ArchiveFile(/Users/max/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.12.7-sources.jar,/scala/Unit.scala),1026)),List())
[2019-01-20 12:37:39,114] DEBUG langserver.core.MessageWriter - Content-Length: 169



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"scala.Unit"}],"range":{"start":{"line":21,"character":30},"end":{"line":21,"character":30}}},"id":14}
[2019-01-20 12:37:39,114] DEBUG langserver.core.MessageWriter - Content-Length: 169



{"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"scala.Unit"}],"range":{"start":{"line":21,"character":30},"end":{"line":21,"character":30}}},"id":14}
[2019-01-20 12:37:39,114] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"scala.Unit"}],"range":{"start":{"line":21,"character":30},"end":{"line":21,"character":30}}},"id":14}
[2019-01-20 12:37:39,114] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","result":{"contents":[{"language":"scala","value":"scala.Unit"}],"range":{"start":{"line":21,"character":30},"end":{"line":21,"character":30}}},"id":14}
[2019-01-20 12:39:07,320] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 59
[2019-01-20 12:39:07,320] DEBUG langserver.core.MessageReader - Received headers:
Content-Length: 59
[2019-01-20 12:39:07,321] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":15,"method":"shutdown","params":null}
[2019-01-20 12:39:07,321] DEBUG langserver.core.Connection - Received {"jsonrpc":"2.0","id":15,"method":"shutdown","params":null}
[2019-01-20 12:39:07,335] DEBUG langserver.core.MessageWriter - Content-Length: 199



{"jsonrpc":"2.0","error":{"code":-32602,"message":"Invalid params","data":{"meaning":"Invalid method parameter(s).","error":{"obj":[{"msg":["command parameters must be given"],"args":[]}]}}},"id":15}
[2019-01-20 12:39:07,335] DEBUG langserver.core.MessageWriter - Content-Length: 199



{"jsonrpc":"2.0","error":{"code":-32602,"message":"Invalid params","data":{"meaning":"Invalid method parameter(s).","error":{"obj":[{"msg":["command parameters must be given"],"args":[]}]}}},"id":15}
[2019-01-20 12:39:07,336] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","error":{"code":-32602,"message":"Invalid params","data":{"meaning":"Invalid method parameter(s).","error":{"obj":[{"msg":["command parameters must be given"],"args":[]}]}}},"id":15}
[2019-01-20 12:39:07,336] DEBUG langserver.core.MessageWriter - payload: {"jsonrpc":"2.0","error":{"code":-32602,"message":"Invalid params","data":{"meaning":"Invalid method parameter(s).","error":{"obj":[{"msg":["command parameters must be given"],"args":[]}]}}},"id":15}
[2019-01-20 12:39:08,332] INFO langserver.core.MessageReader - End of stream, terminating thread
[2019-01-20 12:39:08,332] INFO langserver.core.MessageReader - End of stream, terminating thread
[2019-01-20 12:39:08,332] INFO org.github.dragos.vscode.EnsimeLanguageServer - Shutdown request
[2019-01-20 12:39:08,332] INFO org.github.dragos.vscode.EnsimeLanguageServer - Shutdown request
[2019-01-20 12:39:08,333] INFO org.github.dragos.vscode.EnsimeLanguageServer - Shutting down actor system.
[2019-01-20 12:39:08,333] INFO org.github.dragos.vscode.EnsimeLanguageServer - Shutting down actor system.
[2019-01-20 12:39:08,371] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Shutting down.
[2019-01-20 12:39:08,371] INFO org.github.dragos.vscode.ensime.EnsimeProjectServer - Shutting down.
[2019-01-20 12:39:08,401] INFO org.ensime.util.Debouncer$ - Debouncer action project -> project invoked after maxDelay 20 seconds surpassed (2 calls)
[2019-01-20 12:39:08,401] INFO org.ensime.util.Debouncer$ - Debouncer action project -> project invoked after maxDelay 20 seconds surpassed (2 calls)
[2019-01-20 12:39:08,401] INFO org.github.dragos.vscode.EnsimeLanguageServer - Actor system down.
[2019-01-20 12:39:08,401] INFO org.github.dragos.vscode.EnsimeLanguageServer - Actor system down.
